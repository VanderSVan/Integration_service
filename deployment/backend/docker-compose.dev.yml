version: '3.9'

services:
  backend:
    container_name: "dev-backend"
    restart: unless-stopped
    build:
      context: ../..
      dockerfile: deployment/backend/Dockerfile
      target: development
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_HOST: "db"
      DATABASE_PORT: ${DATABASE_PORT}
      RABBITMQ_HOST: "rabbitmq"
    entrypoint: [ "entrypoint_api.sh" ]
    ports:
      - ${API_PORT}:${API_PORT}
    networks:
      - backend_dev_network
    env_file:
      - ../../components/backend/.env

  task_worker:
    restart: unless-stopped
    build:
      context: ../..
      dockerfile: deployment/backend/Dockerfile
      target: development
    depends_on:
      - backend
      - rabbitmq
    environment:
      DATABASE_HOST: "db"
      DATABASE_PORT: ${DATABASE_PORT}
      RABBITMQ_HOST: "rabbitmq"
    entrypoint: [ "entrypoint_task_worker.sh" ]
    networks:
      - backend_dev_network
    env_file:
      - ../../components/backend/.env

  db:
    container_name: "dev-db"
    restart: unless-stopped
    image: postgres:15
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db-dev:/var/lib/postgresql/data
    expose:
      - ${DATABASE_PORT}
    networks:
      - backend_dev_network
    env_file:
      - ../../components/backend/.env

  rabbitmq:
    container_name: "dev-rabbitmq"
    image: rabbitmq:management
    hostname: dev-rabbitmq
    restart: unless-stopped
    ports:
      - ${RABBITMQ_AMQP_PORT}:${RABBITMQ_AMQP_PORT}
      - ${RABBITMQ_WEB_PORT}:${RABBITMQ_WEB_PORT}
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,info},{default,error}] disk_free_limit 2147483648 # Ограничение свободного места на диске до 2 гигабит
    volumes:
      - dev-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - backend_dev_network

  pgadmin:
    container_name: "dev-pgadmin4"
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - '5050:80'
    volumes:
      - dev-pgadmin-data:/var/lib/pgadmin
    networks:
      - backend_dev_network
    depends_on:
      db:
        condition: service_healthy

volumes:
  db-dev:
  dev-pgadmin-data:
  dev-rabbitmq-data:

networks:
  backend_dev_network:
    driver: bridge
